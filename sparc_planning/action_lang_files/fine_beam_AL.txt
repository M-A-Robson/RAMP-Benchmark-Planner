%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% AutoGenerated AL file
%% Author: MARK ROBSON 2023
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

constants


sorts

robot
beam
link
in_m_end
angle_m_end
in_f_end
joint, with subsorts: in_m_end , in_f_end , angle_m_end.
beam_part, with subsorts: link , joint.
pin
thing, with subsorts: beam , pin.
thing_part, with subsorts: beam_part , pin.
object, with subsorts: robot , thing.
place_c
non_placement_location
approach_location
prerot_location
through_location
target_location
near_to_location
input_locations
place_f, with subsorts: approach_location , target_location , non_placement_location , near_to_location , input_locations.
fine_res_sort, with subsorts: place_f , thing_part.
coarse_res_sort, with subsorts: place_c , thing.

actions

putdown_f(robot,thing_part)
move_f(robot,place_f)
pick_up_f(robot,thing_part)
assemble_f_cap(robot,beam_part)
assemble_f_square(robot,beam_part)
fasten(robot,joint,joint,pin)
push(robot,beam)
move_local(robot,place_f)

intertial fluents

in_hand_c(robot, thing).
in_hand_f(robot, thing_part).
loc_c(object, place_c).
loc_f(object, place_f).
in_assembly_c(beam).
in_assembly_f(beam_part).
supported_c(beam).
supported_f(beam_part).
fastened_c(beam, beam, pin).
fastened_f(beam_part, beam_part, pin).

defined fluents


statics

next_to_c(place_c, place_c).
next_to_f(place_f, place_f).
component(coarse_res_sort, fine_res_sort).
near_to(near_to_location, place_f).
fits_into_c(beam, beam).
fits_into_f(beam_part, beam_part).
fits_through_c(beam, beam).
fits_through_f(beam_part, beam_part).
is_capped_by(beam, beam, beam).
connected_to(beam_part, beam_part).
between(beam_part, beam_part, beam_part).
assem_approach_loc(thing, approach_location).
assem_target_loc(thing, target_location).
assembly_loc(thing, place_f).
beam_through_loc(beam, through_location).
beam_prerotate_loc(beam, prerot_location).

state constraints

¬component(C1, P1) if place_c(P1), ¬place_f(C1)
¬component(C1, P1) if beam(P1), ¬beam_part(C1)
next_to_f(C1, C2) if next_to_f(C2,C1)
¬next_to_c(P1, P2) if ¬next_to_c(P1,P2)
¬next_to_f(P1, P2) if ¬next_to_f(P1,P2)
¬near_to(P1, P2) if ¬near_to(P1,P2)
component(P1, C1) if near_to(C1,C2), component(P1,C2)
¬loc_f(T, P1) if loc_f(T,P2), P1!=P2
next_to_c(P1, P2) if next_to_f(C1,C2), component(P1,C1), component(P2,C2)
loc_c(T, P) if loc_f(T,C), component(P,C)
loc_f(T1, P1) if loc_f(R,P1), in_hand_c(R,T2), T1=T2
¬component(C1, P1) if thing(P1), ¬thing_part(C1)
in_hand_c(R, T) if in_hand_f(R,TP), component(T,TP)
supported_c(B1) if supported_f(P1), component(B1,P1)
supported_f(P1) if supported_c(B1), component(B1,P1)
in_assembly_c(B1) if in_assembly_f(P1), component(B1,P1)
in_assembly_f(P1) if in_assembly_c(B1), component(B1,P1)
assembly_loc(T, C) if assem_approach_loc(T,C)
assembly_loc(T, C) if assem_target_loc(T,C)
assembly_loc(B, C) if beam_prerotate_loc(B,C)
assembly_loc(B, C) if beam_through_loc(B,C)
is_capped_by(B1, B2, B3) if fits_into_c(B1,B2), fits_into_c(B1,B3), B2!=B3
is_capped_by(B1, B2, B3) if is_capped_by(B1,B3,B2)
¬is_capped_by(B1, B2, B3) if ¬is_capped_by(B1,B2,B3)
supported_c(B1) if in_assembly_c(B2), fits_into_c(B1,B2)
supported_c(B1) if in_assembly_c(B2), fits_into_c(B2,B1)
¬fits_into_c(B1, B2) if B1=B2
¬fits_through_c(B1, B2) if B1=B2
¬fits_through_c(B1, B2) if fits_into_c(B1,B2)
¬fits_into_c(B1, B2) if fits_through_c(B1,B2)
¬fits_into_c(B1, B2) if fits_into_c(B2,B1)
¬fits_through_c(B1, B2) if fits_through_c(B2,B1)
fastened_c(B1, B2, P) if fastened_f(BP1,BP2,P), component(B1,BP1), component(B2,BP2)
fastened_f(BP1, BP2, P) if fastened_f(BP2,BP1,P)
connected_to(BP1, BP2) if connected_to(BP2,BP1)
¬connected_to(BP1, BP2) if ¬connected_to(BP1,BP2)
between(BP1, BP2, BP3) if connected_to(BP1,BP2), connected_to(BP1,BP3)
between(BP1, BP2, BP3) if connected_to(BP1,BP2), between(BP4,BP1,BP3)
between(BP1, BP2, BP3) if between(BP4,BP1,BP3), between(BP5,BP1,BP3)
between(BP1, BP2, BP3) if between(BP1,BP3,BP2)
fits_into_c(B1, B2) if fits_into_f(D1,D2), component(B1,D1), component(B2,D2)
fits_through_c(B1, B2) if fits_through_f(D1,D2), component(B1,D1), component(B2,D2)

action causal laws and executability conditions

putdown_f(R,T) causes ¬in_hand_f(R,T) 
putdown_f(R,TP) causes ¬in_hand_c(R,T) if component(T,TP)
impossible putdown_f(R,T) if ¬in_hand_f(R,T)
impossible putdown_f(R,T) if loc_f(R,C), non_placement_location(C)

move_f(R,P) causes loc_f(R,P) 
impossible move_f(R,P1) if loc_f(R,P2), P1=P2
impossible move_f(R,P1) if loc_f(R,P2), ¬next_to_f(P1,P2), P1!=P2
impossible move_f(R,P1) if in_hand_f(R,BP), in_assembly_f(BP)
impossible move_f(R,P1) if in_hand_f(R,P), fastened_c(B1,B2,P)
impossible move_f(R,P2) if loc_f(R,P1), near_to(P1,P2)
impossible move_f(R,P1) if in_hand_c(R,T1), target_location(P1)

pick_up_f(R,T) causes in_hand_f(R,T) 
impossible pick_up_f(R,T1) if loc_f(T1,P1), loc_f(R,P2), P1!=P2
impossible pick_up_f(R,T1) if in_hand_f(rob0,T2), thing_part(T2)
impossible pick_up_f(R,T1) if component(B,T1), ¬link(T1), beam(B)

assemble_f_cap(R,BP) causes loc_f(R,C) if assem_target_loc(B,C), component(B,BP)
assemble_f_cap(R,BP) causes in_assembly_f(BP) 
assemble_f_cap(R,BP) causes loc_f(B1,C1) if in_assembly_c(B1), near_to(C1,C2), loc_f(B1,C2)
impossible assemble_f_cap(R,BP) if is_capped_by(B1,B2,B3), component(B1,BP), ¬is_capped_by(B4,B1,B5)
impossible assemble_f_cap(R,BP) if component(B1,BP), loc_f(R,C1), assem_approach_loc(B1,C2), C1!=C2
impossible assemble_f_cap(R,BP) if ¬in_hand_c(R,B), component(B,BP)
impossible assemble_f_cap(R,BP) if in_hand_f(R,BP)
impossible assemble_f_cap(R,BP) if in_assembly_c(B2), in_assembly_c(B3), is_capped_by(B1,B2,B3), B2!=B3, component(B1,BP)
impossible assemble_f_cap(R,BP) if in_assembly_f(BP2), fits_through_f(BP2,BP)
impossible assemble_f_cap(R,BP) if ¬in_assembly_c(B2), in_assembly_c(B3), is_capped_by(B2,B1,B3), B2!=B3, component(B1,BP)
impossible assemble_f_cap(R,BP) if in_assembly_f(BP)
impossible assemble_f_cap(R,BP) if ¬supported_f(BP)
impossible assemble_f_cap(R,BP) if in_assembly_c(B2), beam(B2), loc_f(B2,C1), assem_target_loc(B2,C2), C1!=C2

assemble_f_square(R,BP) causes loc_f(R,C) if assem_target_loc(B,C), component(B,BP), ¬angle_m_end(BP)
assemble_f_square(R,BP) causes loc_f(R,C) if beam_prerotate_loc(B,C), component(B,BP), angle_m_end(BP)
assemble_f_square(R,BP) causes in_assembly_f(BP) if ¬angle_m_end(BP)
assemble_f_square(R,BP) causes loc_f(B1,C1) if in_assembly_c(B1), near_to(C1,C2), loc_f(B1,C2)
impossible assemble_f_square(R,BP) if is_capped_by(B1,B2,B3), component(B2,BP)
impossible assemble_f_square(R,BP) if component(B1,BP), loc_f(R,C1), assem_approach_loc(B1,C2), C1!=C2
impossible assemble_f_square(R,BP1) if fits_into_f(BP1,BP2), ¬in_assembly_f(BP2)
impossible assemble_f_square(R,BP) if ¬in_hand_c(R,B), component(B,BP)
impossible assemble_f_square(R,BP) if in_hand_f(R,BP)
impossible assemble_f_square(R,BP) if in_assembly_c(B2), in_assembly_c(B3), is_capped_by(B1,B2,B3), B2!=B3, component(B1,BP)
impossible assemble_f_square(R,BP) if in_assembly_f(BP2), fits_through_f(BP2,BP)
impossible assemble_f_square(R,BP) if ¬in_assembly_c(B2), in_assembly_c(B3), is_capped_by(B2,B1,B3), B2!=B3, component(B1,BP)
impossible assemble_f_square(R,BP) if in_assembly_f(BP)
impossible assemble_f_square(R,BP) if ¬supported_f(BP)
impossible assemble_f_square(R,BP) if in_assembly_c(B2), beam(B2), loc_f(B2,C1), assem_target_loc(B2,C2), C1!=C2

fasten(R,B1,B2,P1) causes fastened_f(B1,B2,P1) 
fasten(R,B1,B2,P1) causes loc_f(R,C1) if assem_target_loc(P1,C1)
impossible fasten(R,BP1,BP2,P1) if ¬in_assembly_f(BP1)
impossible fasten(R,BP1,BP2,P1) if ¬in_assembly_f(BP2)
impossible fasten(R,B1,B2,P1) if ¬in_hand_f(R,P1)
impossible fasten(R,BP1,BP2,P1) if loc_f(B1,C1), assem_target_loc(B1,C2), component(B1,BP1), C1!=C2
impossible fasten(R,BP1,BP2,P1) if loc_f(B1,C1), assem_target_loc(B1,C2), component(B1,BP2), C1!=C2
impossible fasten(R,BP1,BP2,P1) if loc_f(R,C1), assem_approach_loc(P1,C2), C1!=C2
impossible fasten(R,BP1,BP2,P1) if ¬fits_into_f(BP1,BP2)
impossible fasten(R,BP1,BP2,P1) if fastened_f(BP1,BP2,P2)

push(R,B) causes loc_f(B,C) if assem_target_loc(B,C)
push(R,B) causes loc_f(R,C) if assem_target_loc(B,C)
impossible push(R,B) if ¬in_assembly_c(B)
impossible push(R,B) if in_hand_c(R,T), thing(T)
impossible push(R,B) if loc_f(R,C1), ¬near_to(C1,C2), assem_target_loc(B,C2)
impossible push(R,B) if loc_f(R,C1), loc_f(B,C2), C1!=C2
impossible push(R,B) if loc_f(R,C1), ¬near_to_location(C1)

move_local(R,C1) causes loc_f(R,C1) 
impossible move_local(R,C2) if loc_f(R,C1), ¬near_to(C1,C2)
impossible move_local(R,P2) if loc_f(R,P1), ¬near_to_location(P1)
impossible move_local(R,P1) if loc_f(R,P2), P1=P2
