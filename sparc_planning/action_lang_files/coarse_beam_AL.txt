%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% AutoGenerated AL file
%% Author: MARK ROBSON 2023
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

constants


sorts

robot
beam
pin
thing, with subsorts: beam , pin.
object, with subsorts: robot , thing.
place_c

actions

putdown(robot,thing)
move(robot,place_c)
pick_up(robot,thing)
assemble(robot,beam)
fasten(robot,beam,beam,pin)
push(robot,beam)

intertial fluents

in_hand_c(robot, thing).
loc_c(object, place_c).
in_assembly_c(beam).
supported_c(beam).
fastened_c(beam, beam, pin).
misaligned_c(beam).
can_fasten_c(beam, beam).

defined fluents


statics

next_to_c(place_c, place_c).
fits_into_c(beam, beam).
fits_through_c(beam, beam).
is_capped_by(beam, beam, beam).
base(beam).

state constraints

¬base(B2) if base(B1), B1!=B2
next_to_c(P1, P2) if next_to_c(P2,P1)
fastened_c(B1, B2, P1) if fastened_c(B2,B1,P1)
¬next_to_c(P1, P2) if ¬next_to_c(P1,P2)
¬loc_c(T, P1) if loc_c(T,P2), P1!=P2
loc_c(T1, P1) if loc_c(R,P1), in_hand_c(R,T2), T1=T2
is_capped_by(B1, B2, B3) if fits_into_c(B1,B2), fits_into_c(B1,B3), B2!=B3
is_capped_by(B1, B2, B3) if is_capped_by(B1,B3,B2)
¬is_capped_by(B1, B2, B3) if ¬is_capped_by(B1,B2,B3)
supported_c(B1) if in_assembly_c(B2), fits_into_c(B1,B2)
supported_c(B1) if in_assembly_c(B2), fits_into_c(B2,B1)
¬fits_into_c(B1, B2) if B1=B2
¬fits_through_c(B1, B2) if B1=B2
¬fits_through_c(B1, B2) if fits_into_c(B1,B2)
¬fits_into_c(B1, B2) if fits_through_c(B1,B2)
¬fits_into_c(B1, B2) if fits_into_c(B2,B1)
¬fits_through_c(B1, B2) if fits_through_c(B2,B1)
¬fits_into_c(B1, B2) if ¬fits_into_c(B1,B2)

action causal laws and executability conditions

putdown(R,T) causes ¬in_hand_c(R,T) 
impossible putdown(R,T) if ¬in_hand_c(R,T)

move(R,P) causes loc_c(R,P) 
impossible move(R,P1) if loc_c(R,P2), P1=P2
impossible move(R,P1) if loc_c(R,P2), ¬next_to_c(P1,P2)
impossible move(R,P1) if in_hand_c(R,B1), in_assembly_c(B1)
impossible move(R,P1) if in_hand_c(R,P), fastened_c(B1,B2,P)

pick_up(R,T) causes in_hand_c(R,T) 
impossible pick_up(R,T1) if loc_c(T1,P1), loc_c(R,P2), P1!=P2
impossible pick_up(R,T1) if in_hand_c(R,T2), thing(T2)

assemble(R,B) causes in_assembly_c(B) 
assemble(R,B1) causes misaligned_c(B2) if in_assembly_c(B2), ¬base(B2), B1!=B2
assemble(R,B1) causes can_fasten_c(B1,B2) if in_assembly_c(B2), fits_into_c(B1,B2), B1!=B2
assemble(R,B1) causes can_fasten_c(B1,B2) if in_assembly_c(B2), fits_through_c(B1,B2), B1!=B2
impossible assemble(R,B) if ¬in_hand_c(R,B)
impossible assemble(R,B1) if in_assembly_c(B2), in_assembly_c(B3), is_capped_by(B1,B2,B3), B2!=B3
impossible assemble(R,B1) if in_assembly_c(B2), fits_through_c(B2,B1)
impossible assemble(R,B1) if ¬in_assembly_c(B2), in_assembly_c(B3), is_capped_by(B2,B1,B3), B2!=B3
impossible assemble(R,B) if loc_c(R,P), P!=assembly_area
impossible assemble(R,B) if in_assembly_c(B)
impossible assemble(R,B) if ¬supported_c(B)
impossible assemble(R,B1) if in_assembly_c(B2), misaligned_c(B2)
impossible assemble(R,B1) if can_fasten_c(B2,B3), B1!=B2, B1!=B3

fasten(R,B1,B2,P1) causes fastened_c(B1,B2,P1) 
fasten(R,B1,B2,P1) causes ¬can_fasten_c(B1,B2) 
impossible fasten(R,B1,B2,P1) if ¬in_assembly_c(B1)
impossible fasten(R,B1,B2,P1) if ¬in_assembly_c(B2)
impossible fasten(R,B1,B2,P1) if ¬in_hand_c(R,P1)
impossible fasten(R,B1,B2,P1) if ¬fits_into_c(B1,B2)
impossible fasten(R,B1,B2,P1) if fastened_c(B1,B2,P2)
impossible fasten(R,B1,B2,P1) if loc_c(B1,L1), loc_c(R,L2), L1!=L2
impossible fasten(R,B1,B2,P1) if misaligned_c(B1)
impossible fasten(R,B1,B2,P1) if misaligned_c(B2)

push(R,B1) causes ¬misaligned_c(B1) 
impossible push(R,B1) if loc_c(B1,L1), loc_c(R,L2), L1!=L2
impossible push(R,B1) if ¬in_assembly_c(B1)
impossible push(R,B1) if in_hand_c(R,T), thing(T)
